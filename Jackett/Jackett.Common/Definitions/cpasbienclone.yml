---
id: cpasbienclone
name: cpasbien clone
description: "cpasbien clone is a FRENCH Public site for TV / MOVIES / GENERAL"
language: fr-fr
type: public
encoding: UTF-8
followredirect: true
links:
  - https://cpasbien.to/
legacylinks:
  - https://www1.cpasbiens.ws/
  - https://www2.cpasbiens.ws/
  - https://cpasbiens.cm/
  - https://www1.cpasbiens.cm/
  - https://wwv.cpasbien.to/
  - https://cpasbiens.black-mirror.xyz/
  - https://cpasbiens.unblocked.casa/
  - https://cpasbiens.proxyportal.fun/
  - https://cpasbiens.uk-unblock.xyz/
  - https://cpasbiens.ind-unblock.xyz/

caps:
  categorymappings:
    - {id: films, cat: Movies, desc: "Movies"}
    - {id: series, cat: TV, desc: "TV"}
    - {id: other, cat: Other, desc: "Other"}

  modes:
    search: [q]
    tv-search: [q, season, ep]
    movie-search: [q]

settings:
  - name: sort
    type: select
    label: Sort requested from site (Only works for searches with Keywords)
    default: "?trie-date-d"
    options:
      "?trie-date-d": "created desc"
      "?trie-date-a": "created asc"
      "?trie-seeds-d": "seeders desc"
      "?trie-seeds-a": "seeders asc"
      "?trie-poid-d": "size desc"
      "?trie-poid-a": "size asc"
      "?trie-nom-d": "title desc"
      "?trie-nom-a": "title asc"

download:
  selector: a[href^="magnet:"]
  attribute: href

search:
  paths:
    - path: "{{ if .Keywords }}search_torrent/{{ .Keywords }}{{ .Config.sort }}{{else}}home/{{end}}"

  rows:
    selector: table.table-corps > tbody > tr:has(a)

  fields:
    category:
      text: other
    site_date:
      selector: a
      filters:
        # year can be at the end of the title, so we get it and name it site_date
        - name: regexp
          args: "(\\d{4})$"
    title:
      selector: a
      filters:
        # now we put the date at the right place according scene naming rules using .Result.site_date
        - name: replace
          args: [" FRENCH", " {{ .Result.site_date }} FRENCH"]
        - name: replace
          args: ["MULTI", "{{ .Result.site_date }} MULTI"]
        - name: replace
          args: ["TRUEFRENCH", "{{ .Result.site_date }} TRUEFRENCH"]
        - name: replace
          args: ["VOSTFR", "{{ .Result.site_date }} VOSTFR"]
        # and we delete it at the end
        - name: re_replace
          args: ["(\\d{4})$", ""]
    details:
      selector: a
      attribute: href
    download:
      selector: a
      attribute: href
    size:
      selector: div.poid
      filters:
        - name: re_replace
          args: ["\\.(\\d)Ko", "$1X00"]
        - name: re_replace
          args: ["Ko", "000"]
        - name: re_replace
          args: ["\\.(\\d)Mo", "$1X00000"]
        - name: re_replace
          args: ["Mo", "000000"]
        - name: re_replace
          args: ["\\.(\\d)Go", "$1X00000000"]
        - name: re_replace
          args: ["Go", "000000000"]
        - name: re_replace
          args: ["\\.(\\d)To", "$1X00000000000"]
        - name: re_replace
          args: ["To", "000000000000"]
        - name: replace
          args: ["X", ""]
          # this is for the search with keywords which returns sizes nnnnn.n without unit indicator.
        - name: re_replace
          args: ["(\\d+)\\.\\d", "$1 MB"]
    date:
      text: now
    seeders:
      text: 0
    seeders:
      selector: div.up
      optional: true
    leechers:
      text: 0
    leechers:
      selector: div.down
      optional: true
    downloadvolumefactor:
      text: 0
    uploadvolumefactor:
      text: 1
# engine n/a
