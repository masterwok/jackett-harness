---
id: asiancinema
name: AsianCinema
description: "Tracker Movies/TV/Music"
language: en-us
type: private
encoding: UTF-8
links:
  - https://asiancinema.me/

caps:
  categorymappings:
    - {id: 1, cat: Movies, desc: "Movies"}
    - {id: 2, cat: TV, desc: "TV"}
    - {id: 3, cat: Audio, desc: "Music"}

  modes:
    search: [q, imdbid]
    tv-search: [q, season, ep, imdbid]
    movie-search: [q, imdbid]
    music-search: [q]

settings:
  - name: username
    type: text
    label: Username
  - name: password
    type: password
    label: Password
  - name: sort
    type: select
    label: Sort requested from site
    default: "created_at"
    options:
      "created_at": "created"
      "seeders": "seeders"
      "size": "size"
      "name": "title"
  - name: type
    type: select
    label: Order requested from site
    default: "desc"
    options:
      "desc": "desc"
      "asc": "asc"

login:
  path: login
  method: form
  form: form[action$="/login"]
  inputs:
    username: "{{ .Config.username }}"
    password: "{{ .Config.password }}"
    remember: on
  selectorinputs:
    _token:
      selector: input[name="_token"]
      attribute: value
  error:
    - selector: div#ERROR_COPY
#    test:
#      path: /
#      selector: a[href$="/logout"]

ratio:
  path: /
  selector: li:has(i.fa-sync-alt)
  filters:
    - name: regexp
      args: "Ratio : (\\d+)"

search:
  paths:
    - path: torrents/filter
  inputs:
    $raw: "{{ range .Categories }}categories[]={{.}}&{{end}}"
    search: "{{ if .Query.IMDBID }}{{else}}{{ .Keywords }}{{end}}"
    description: ""
    uploader: ""
    imdb: "{{ .Query.IMDBIDShort }}"
    tvdb: ""
    tmdb: ""
    mal: ""
    igdb: ""
    sorting: "{{ .Config.sort }}"
    sort: "{{ .Config.sort }}"
    direction: "{{ .Config.type }}"
    qty: 100

  rows:
    selector: table > tbody > tr

  fields:
    category:
      selector: a[href*="/categories/"]
      attribute: href
      filters:
        - name: regexp
          args: "/categories/(\\d+)"
    title:
      selector: a.view-torrent
    download:
      selector: a[href*="/download/"]
      attribute: href
    details:
      selector: a.view-torrent
      attribute: href
    banner:
      optional: true
      selector: div.torrent-poster img
      attribute: src
      filters:
        - name: replace
          args: ["https://via.placeholder.com/600x900", ""]
    comments:
      selector: a[href*="#comments"]
      attribute: href
    size:
      selector: td:nth-last-child(4)
    seeders:
      selector: td:nth-last-child(3)
    leechers:
      selector: td:nth-last-child(2)
    grabs:
      selector: td:nth-last-child(1)
      filters:
        - name: regexp
          args: (\d+)
    imdb:
      optional: true
      selector: a[href*="www.imdb.com/title/tt"]
      attribute: href
    date:
      selector: time
      filters:
        - name: append
          args: " ago"
    downloadvolumefactor:
      case:
        i[class*="fa-id-badge text-orange"]: 0 # 24 Hour FreeLeech From BON Store
        i[class*="fa-trophy text-purple"]: 0 # Special FreeLeech For Certain User Groups
        i[class*="fa-star text-bold"]: 0 # Freeleech From Token
        i[class*="fa-coins text-bold"]: 0 # Freeleech From Token
        i[class*="fa-globe text-blue"]: 0 # Global Freeleech
        i[class*="fa-star text-gold"]: 0 # Freeleech
        i[class*="fa-certificate text-pink"]: 0 # Featured Torrent
        "*": 1
    uploadvolumefactor:
      case:
        i[class*="fa-gem text-green"]: 2 # Single Torrent Double Upload
        i[class*="fa-globe text-green"]: 2 # Global Double Upload
        i[class*="fa-certificate text-pink"]: 2 # Featured Torrent
        "*": 1
# UNIT3D 2.2.7
